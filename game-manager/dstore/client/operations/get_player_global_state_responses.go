// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"git-codecommit.eu-central-1.amazonaws.com/v1/repos/game-manager.git/dstore/models"
)

// GetPlayerGlobalStateReader is a Reader for the GetPlayerGlobalState structure.
type GetPlayerGlobalStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPlayerGlobalStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPlayerGlobalStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPlayerGlobalStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPlayerGlobalStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPlayerGlobalStateOK creates a GetPlayerGlobalStateOK with default headers values
func NewGetPlayerGlobalStateOK() *GetPlayerGlobalStateOK {
	return &GetPlayerGlobalStateOK{}
}

/* GetPlayerGlobalStateOK describes a response with status code 200, with default header values.

200
*/
type GetPlayerGlobalStateOK struct {
	Payload *models.PlayerGlobalStateResponse
}

func (o *GetPlayerGlobalStateOK) Error() string {
	return fmt.Sprintf("[GET /player-global-state][%d] getPlayerGlobalStateOK  %+v", 200, o.Payload)
}
func (o *GetPlayerGlobalStateOK) GetPayload() *models.PlayerGlobalStateResponse {
	return o.Payload
}

func (o *GetPlayerGlobalStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PlayerGlobalStateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlayerGlobalStateBadRequest creates a GetPlayerGlobalStateBadRequest with default headers values
func NewGetPlayerGlobalStateBadRequest() *GetPlayerGlobalStateBadRequest {
	return &GetPlayerGlobalStateBadRequest{}
}

/* GetPlayerGlobalStateBadRequest describes a response with status code 400, with default header values.

400
*/
type GetPlayerGlobalStateBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetPlayerGlobalStateBadRequest) Error() string {
	return fmt.Sprintf("[GET /player-global-state][%d] getPlayerGlobalStateBadRequest  %+v", 400, o.Payload)
}
func (o *GetPlayerGlobalStateBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlayerGlobalStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPlayerGlobalStateInternalServerError creates a GetPlayerGlobalStateInternalServerError with default headers values
func NewGetPlayerGlobalStateInternalServerError() *GetPlayerGlobalStateInternalServerError {
	return &GetPlayerGlobalStateInternalServerError{}
}

/* GetPlayerGlobalStateInternalServerError describes a response with status code 500, with default header values.

500
*/
type GetPlayerGlobalStateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetPlayerGlobalStateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /player-global-state][%d] getPlayerGlobalStateInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPlayerGlobalStateInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPlayerGlobalStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
